System sonarqak24
 
Event sonardata    : distance(D)   //emitted  by sonardevice  

Dispatch sonarwork : sonarwork(X)
Dispatch doread    : doread(X)

Context ctxsonarqak24 ip [ host= "localhost"     port= 8128 ]
  
QActor sonar24 context ctxsonarqak24{   
	State s0 initial{  
		println("sonar24 | ready") 
		delay 1000 //give time to start sonardevice ...
		subscribeTo sonardevice for sonardata
 	}
	Goto work
	
	State work{
		//println("sonar24 | waits ... ") 		
	}
	Transition t0 whenEvent sonardata -> handlesonardata
 	 
	State handlesonardata{
		printCurrentMessage color yellow
		onMsg( sonardata : distance(D) ){
			println("$name | distance=${payloadArg(0)}") color magenta
		}
	}
	Goto work 
	 
 }   
 
QActor sonardevice context ctxsonarqak24{
[# 
	lateinit var reader : java.io.BufferedReader
	var working = false
    lateinit var p : Process	
    var Distance = 0
#]	
	State s0 initial{
		println("$name | sonarstart") 
	}	
	Goto startTheSonar
 	
	State startTheSonar{
	[#
    	working = true		
		p       = Runtime.getRuntime().exec("python sonar.py")
		reader  = java.io.BufferedReader(  java.io.InputStreamReader(p.getInputStream() ))	
	#]		
	}
	Goto readSonarData
	
	State readSonarData{
	[# 
		var data = reader.readLine()
		CommUtils.outyellow("$name with python: data = $data"   ) 
		if( data != null ){
		try{ 
			val vd = data.toFloat()
			val v  = vd.toInt()
			if( v <= 100 ){	//A first filter ...
				Distance = v				
			}else Distance = 0
		}catch(e: Exception){
				CommUtils.outred("$name readSonarDataERROR: $e "   )
		}
		}//if
		
	#]	
		if [# Distance > 0 #] { 
		    println("$name with python: data = $data"   ) color yellow
			emitlocalstream sonardata : distance($Distance)
			//emit  sonardata : distance($Distance)
		}
		autodispatch doread : doread(1)
	}
	Transition t0 
 		whenMsg doread and [# working   #]   -> readSonarData 
		whenMsg doread and [# ! working #] -> endOfRead
		
	State endOfRead{
		[#
			
   	    p.destroy()
    	if (p.isAlive()) {
    	    p.destroyForcibly();
    	}
       	CommUtils.outred("$tt $name | endOfRead"  )
			
		#]
	}
 	
}//sonardevice


 
  