System servicecallers 

Request dofibo   : dofibo(N)
Reply   fibodone : fibodone( CALLER,N,R ) for dofibo

Dispatch out  : out(S) 
Dispatch show : show(S)  

Context ctxcallers ip [host="localhost" port=8015]
Context ctxservice ip [host="127.0.0.1" port=8011] 

ExternalQActor servicemath context ctxservice

QActor display context ctxcallers withobj d using "utils.DisplayObj.create()" {  //
 	State s0 initial{		
	}
	Transition t0 whenMsg out -> handleout
	
	State handleout{
		printCurrentMessage color yellow
		[# val SOUT = "${currentMsg.msgContent()}" #]
		[# d.write( SOUT ) #]
	} 
	Transition t0 whenMsg out -> handleout
}
 
QActor caller_1 context ctxcallers {  
	[# val N=6 #]
	State s0 initial { 
		println("$name | STARTS")
		[# val SOUT ="$name | STARTS" #]
		forward display -m out : out($SOUT)  
 		request servicemath -m dofibo : dofibo($N)
	}	 
	Transition t0 whenReply fibodone -> fiboanswer
	
	State fiboanswer{
		printCurrentMessage color magenta
		[# val M = currentMsg.msgContent() #]
		//println("$currentMsg") color red
		onMsg(fibodone : fibodone( CALLER,V,R) ){
			[# val SOUT = "$name | fiboanswer for ${payloadArg(1)} from ${payloadArg(0)}=${payloadArg(2)}" #]
			println("$name | $SOUT") color magenta
            forward display -m out : out($SOUT)
		}   
	}

} 											