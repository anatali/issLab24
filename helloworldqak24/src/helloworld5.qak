System helloworld3 
 
Dispatch out  : out(TERM) 

Context ctxhello ip [host="localhost" port=8003] 

QActor display context ctxhello withobj d using "utils.DisplayObj.create()"{
	//[# val d = utils.DisplayObj.create() #]
	State s0 initial{
		
	}
	Transition t0 whenMsg out -> handleout
	
	State handleout{
		onMsg( out:out(TERM)){
			[# val OutMsg = payloadArg(0) #]
			[# d.write("$OutMsg") #]
			 
		}
		
	}
	Transition t0 whenMsg out -> handleout
}

QActor worker context ctxhello dynamicOnly{
	[# var n = 0 #]
 	State s0 initial{
		delay 1500
		[# var M = "${name}_hello_${n++}"#]
		forward display -m out:out($M)
	}	 
} 

QActor starter context ctxhello{
	State s0 initial{
		create worker 
		delay 1000
		create worker 
	}
}  


//DisplayHTML d   
