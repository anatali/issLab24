/* Generated by AN DISI Unibo */ 
package it.unibo.clr2

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023

//User imports JAN2024

class Clr2 ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		 var StartTime = 0L 
			   var Elapsed   = 0L			   
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						subscribeToLocalActor("clr1") 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t01",targetState="work",cond=whenEvent("startcaller"))
				}	 
				state("work") { //this:State
					action { //it:State
						CommUtils.outblue("$name STARTS dofibo(8)")
						StartTime = getCurrentTime()
						request("dofibo", "dofibo(8)" ,"smathsynch" )  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t02",targetState="handleAnswer",cond=whenReply("fibodone"))
				}	 
				state("handleAnswer") { //this:State
					action { //it:State
						updateResourceRep( "callerdone($name)"  
						)
						Elapsed = getDuration(StartTime)
						CommUtils.outblue("$name Elapsed=$Elapsed")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
			}
		}
} 
