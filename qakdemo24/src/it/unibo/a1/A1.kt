/* Generated by AN DISI Unibo */ 
package it.unibo.a1

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023

//User imports JAN2024

class A1 ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		 var ready     = true
		   var end       = false	
		   fun check( v : String ) : Boolean{
		   	   return v =="cmd(continue)"
		   }
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outblue("$name in s0 end=$end ready=$ready")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="end", cond=doswitchGuarded({ end  
					}) )
					transition( edgeName="goto",targetState="s1", cond=doswitchGuarded({! ( end  
					) }) )
				}	 
				state("end") { //this:State
					action { //it:State
						CommUtils.outmagenta("$name BYE")
						 System.exit(0)  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
				state("s1") { //this:State
					action { //it:State
						CommUtils.outblue("$name in s1 ready=$ready")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t00",targetState="handleAlarm",cond=whenEventGuarded("alarm",{ ready  
					}))
					transition(edgeName="t01",targetState="handleCmd",cond=whenDispatchGuarded("cmd",{ ready  
					}))
					transition(edgeName="t02",targetState="checkCmd",cond=whenDispatchGuarded("cmd",{ ! ready  
					}))
				}	 
				state("handleAlarm") { //this:State
					action { //it:State
						CommUtils.outmagenta("$name in handleAlarm ready=$ready")
						 ready = false  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="s1", cond=doswitch() )
				}	 
				state("handleCmd") { //this:State
					action { //it:State
						CommUtils.outcyan("$name in ${currentState.stateName} | $currentMsg | ${Thread.currentThread().getName()} n=${Thread.activeCount()}")
						 	   
						if( checkMsgContent( Term.createTerm("cmd(ARG)"), Term.createTerm("cmd(end)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 end = true  
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="end", cond=doswitchGuarded({ end  
					}) )
					transition( edgeName="goto",targetState="s1", cond=doswitchGuarded({! ( end  
					) }) )
				}	 
				state("checkCmd") { //this:State
					action { //it:State
						CommUtils.outmagenta("$name checks $currentMsg")
						 ready = check( currentMsg.msgContent() )  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="s1", cond=doswitch() )
				}	 
			}
		}
} 
