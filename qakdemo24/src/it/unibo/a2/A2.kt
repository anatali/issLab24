/* Generated by AN DISI Unibo */ 
package it.unibo.a2

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023

//User imports JAN2024

class A2 ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						forward("cmd", "cmd(10)" ,"a1" ) 
						delay(500) 
						emit("alarm", "alarm(fire)" ) 
						forward("cmd", "cmd(20)" ,"a1" ) 
						emit("alarm", "alarm(tsunami)" ) 
						forward("cmd", "cmd(continue)" ,"a1" ) 
						forward("cmd", "cmd(30)" ,"a1" ) 
						forward("cmd", "cmd(end)" ,"a1" ) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
			}
		}
} 
