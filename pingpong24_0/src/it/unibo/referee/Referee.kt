/* Generated by AN DISI Unibo */ 
package it.unibo.referee

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023

//User imports JAN2024

class Referee ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		 var N = 0; var NLAST = 0; val TOBSMAX=3000L  
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outcyan("$name STARTS ")
						observeResource("localhost","8014","ctxtest","ping","ballview")
						observeResource("localhost","8014","ctxtest","pong","ballview")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="emitStart", cond=doswitch() )
				}	 
				state("emitStart") { //this:State
					action { //it:State
						CommUtils.outcyan("$name emits start ")
						emit("startgame", "startgame(oK)" ) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
				 	 		stateTimer = TimerActor("timer_emitStart", 
				 	 					  scope, context!!, "local_tout_"+name+"_emitStart", 1000.toLong() )  //OCT2023
					}	 	 
					 transition(edgeName="t09",targetState="emitStart",cond=whenTimeout("local_tout_"+name+"_emitStart"))   
					transition(edgeName="t010",targetState="handlegame",cond=whenDispatch("ballview"))
				}	 
				state("handlegame") { //this:State
					action { //it:State
						CommUtils.outcyan("$name in ${currentState.stateName} | $currentMsg | ${Thread.currentThread().getName()} n=${Thread.activeCount()}")
						 	   
						 N++  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
				 	 		stateTimer = TimerActor("timer_handlegame", 
				 	 					  scope, context!!, "local_tout_"+name+"_handlegame", TOBSMAX )  //OCT2023
					}	 	 
					 transition(edgeName="t011",targetState="gameended",cond=whenTimeout("local_tout_"+name+"_handlegame"))   
					transition(edgeName="t012",targetState="handlegame",cond=whenDispatch("ballview"))
				}	 
				state("handleRequest") { //this:State
					action { //it:State
						CommUtils.outcyan("$name in ${currentState.stateName} | $currentMsg | ${Thread.currentThread().getName()} n=${Thread.activeCount()}")
						 	   
						answer("info", "obsinfo", "obsinfo($N)"   )  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="endsystem", cond=doswitch() )
				}	 
				state("gameended") { //this:State
					action { //it:State
						CommUtils.outcyan("$name gameended ")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
				 	 		stateTimer = TimerActor("timer_gameended", 
				 	 					  scope, context!!, "local_tout_"+name+"_gameended", 1000.toLong() )  //OCT2023
					}	 	 
					 transition(edgeName="t013",targetState="endsystem",cond=whenTimeout("local_tout_"+name+"_gameended"))   
					transition(edgeName="t014",targetState="handleRequest",cond=whenRequest("info"))
				}	 
				state("endsystem") { //this:State
					action { //it:State
						delay(1000) 
						CommUtils.outmagenta("$name BYE")
						 System.exit(0)  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
			}
		}
} 
