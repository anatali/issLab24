/* Generated by AN DISI Unibo */ 
package it.unibo.cell

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023

//User imports JAN2024

class Cell ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		 
			   var MyState = false 
			   var Countnb     = 0  //numero dei vicini
			   var Countnbon   = 0  //numero degli stati on dei vicini
			   var Countnbmsgs = 0  //numero dei msg ricevuti dai vicini	   
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						forward("cellcreated", "cellcreated(MyName,false)" ,"gridcreator" ) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t038",targetState="setmyneigbors",cond=whenDispatch("nbconfig"))
				}	 
				state("setmyneigbors") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("nbconfig(N)"), Term.createTerm("nbconfig(N)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 Countnb = payloadArg(0).toInt()  
								CommUtils.outblue("$name | ha  $Countnb vicini")
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t039",targetState="setcellstate",cond=whenDispatch("switchstate"))
					transition(edgeName="t040",targetState="emitinfophase",cond=whenEvent("startthegame"))
				}	 
				state("setcellstate") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("switchstate(X)"), Term.createTerm("switchstate(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 MyState = ! MyState  
						}
						updateResourceRep( "$MyState"  
						)
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t041",targetState="setcellstate",cond=whenDispatch("switchstate"))
					transition(edgeName="t042",targetState="emitinfophase",cond=whenEvent("startthegame"))
				}	 
				state("emitinfophase") { //this:State
					action { //it:State
						 var MyInfo = "$name,$MyState"  
						updateResourceRep( "$MyState"  
						)
						delay(10) 
						 conway.GLMSupport.sendToNeighbors(myself, MyInfo)  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t043",targetState="elabinfophase",cond=whenEvent("curstate"))
				}	 
				state("elabinfophase") { //this:State
					action { //it:State
						 Countnbmsgs=Countnbmsgs+1  
						if( checkMsgContent( Term.createTerm("curstate(NB,STATE)"), Term.createTerm("curstate(NB,true)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 Countnbon = Countnbon + 1 
						}
						if(  Countnbmsgs == Countnb  
						 ){  
									//CommUtils.outyellow("$name | elabinfophase $Countnbmsgs/$Countnb ")  //!!!
									forward("allnbreceived","allnbreceived(ok)",name)						 
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t044",targetState="elabinfophase",cond=whenEvent("curstate"))
					transition(edgeName="t045",targetState="elabstatephase",cond=whenDispatch("allnbreceived"))
				}	 
				state("elabstatephase") { //this:State
					action { //it:State
						if(  MyState   
						 ){ MyState = Countnbon==2 || Countnbon==3  
						}
						if(  ! MyState   
						 ){ MyState = (Countnbon==3)  
						}
						 Countnbmsgs = 0
								   Countnbon   = 0 
						forward("cellready", "cellready($MyName)" ,"gamelife" ) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t046",targetState="emitinfophase",cond=whenEvent("synch"))
					transition(edgeName="t047",targetState="endthecell",cond=whenDispatch("stopthecell"))
				}	 
				state("endthecell") { //this:State
					action { //it:State
						forward("cellends", "cellends($MyName)" ,"gamelife" ) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="waittoresume", cond=doswitch() )
				}	 
				state("clearThecell") { //this:State
					action { //it:State
						 MyState = false  
						updateResourceRep( "$MyState"  
						)
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="waittoresume", cond=doswitch() )
				}	 
				state("waittoresume") { //this:State
					action { //it:State
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t048",targetState="setcellstate",cond=whenDispatch("switchstate"))
					transition(edgeName="t049",targetState="emitinfophase",cond=whenEvent("startthegame"))
					transition(edgeName="t050",targetState="clearThecell",cond=whenEvent("clearCell"))
				}	 
			}
		}
} 
